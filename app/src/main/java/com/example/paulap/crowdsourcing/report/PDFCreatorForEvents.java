package com.example.paulap.crowdsourcing.report;

import com.example.paulap.crowdsourcing.Models.Event;
import com.example.paulap.crowdsourcing.Models.Issue;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;

import java.util.Date;
import java.util.List;

/**
 * This is to create a PDF file.
 */
public class PDFCreatorForEvents {
    private final static String[] HEADER_ARRAY = {"Data", "Location", "Goal", "Category"};
    public final static Font SMALL_BOLD = new Font(Font.FontFamily.TIMES_ROMAN, 8,
            Font.BOLD);
    public final static Font NORMAL_FONT = new Font(Font.FontFamily.TIMES_ROMAN, 8,
            Font.NORMAL);
    public static void addMetaData(Document document, String sqlXMLFileName) {
        document.addTitle("Sample Report");
        document.addSubject("Using iText");
        document.addAuthor("Echipa 10 PIU");
    }
    public static void addContent(Document document, List<Event> dataObjList) throws DocumentException {
        Paragraph paragraph = new Paragraph();
        paragraph.setFont(NORMAL_FONT);
        createReportTable(paragraph, dataObjList);
        document.add(paragraph);
    }
    private static void createReportTable(Paragraph paragraph, List<Event> dataObjList)
            throws BadElementException {
        PdfPTable table = new PdfPTable(4);
        table.setWidthPercentage(100);
        paragraph.add(new Chunk("Table ", SMALL_BOLD));
        if(null == dataObjList){
            paragraph.add(new Chunk("No data to display."));
            return;
        }
        addHeaderInTable(HEADER_ARRAY, table);

        for(Event dataObject : dataObjList){
            addToTable(table, dataObject.getData());
            addToTable(table, dataObject.getL());
            addToTable(table, dataObject.getGoal());
            addToTable(table, dataObject.getCategory());
        }
        paragraph.add(table);
    }
    /** Helper methods start here **/
    public static void addTitlePage(Document document, String title) throws DocumentException {
        Paragraph preface = new Paragraph();
        addEmptyLine(preface, 3);
        preface.add(new Phrase("Events: ", NORMAL_FONT));
        preface.add(new Phrase(title, PDFCreatorForEvents.NORMAL_FONT));
        addEmptyLine(preface, 1);
        preface.add(new Phrase("Date: ", PDFCreatorForEvents.SMALL_BOLD));
        preface.add(new Phrase(new Date().toString(), PDFCreatorForEvents.NORMAL_FONT));
        addEmptyLine(preface, 1);
        preface.add(new Phrase("Report generated by: ", PDFCreatorForEvents.SMALL_BOLD));
        preface.add(new Phrase("Echipa 10 PIU", PDFCreatorForEvents.NORMAL_FONT));
        addEmptyLine(preface, 2);
        preface.add(new Phrase("This report contains all the events.", PDFCreatorForEvents.NORMAL_FONT));
        document.addSubject("PDF : " + title);
        preface.setAlignment(Element.ALIGN_CENTER);
        document.add(preface);
        document.newPage();
    }
    public static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
    public static void addHeaderInTable(String[] headerArray, PdfPTable table){
        PdfPCell c1 = null;
        for(String header : headerArray) {
            c1 = new PdfPCell(new Phrase(header, PDFCreatorForEvents.SMALL_BOLD));
            c1.setBackgroundColor(BaseColor.GREEN);
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
        }
        table.setHeaderRows(1);
    }
    public static void addToTable(PdfPTable table, String data){
        table.addCell(new Phrase(data, PDFCreatorForEvents.NORMAL_FONT));
    }
    public static Paragraph getParagraph(){
        Paragraph paragraph = new Paragraph();
        paragraph.setFont(PDFCreatorForEvents.NORMAL_FONT);
        addEmptyLine(paragraph, 1);
        return paragraph;
    }
}



